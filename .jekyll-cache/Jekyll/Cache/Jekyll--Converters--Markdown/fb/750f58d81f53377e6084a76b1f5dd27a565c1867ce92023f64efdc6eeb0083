I",<h1 id="앱-구조">앱 구조</h1>
<p>docker + virtual host로 각 코드이그나이터 앱 라우팅
app/m/-&gt;CI/m/application
app/www/-&gt;CI/www/application
…</p>

<h2 id="코드이그나이터-셋업">코드이그나이터 셋업</h2>
<p>코드이그나이터에서 session.auto_start를 사용하기 때문에 php.ini에서 옵션을 추가합니다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>RUN { \
    echo 'log_errors=on'; \
    echo 'display_errors=off'; \
    echo 'upload_max_filesize=32M'; \
    echo 'post_max_size=32M'; \
    echo 'memory_limit=128M'; \
    echo 'date.timezone="UTC"'; \
    echo 'session.auto_start=1'; \
  } &gt; /usr/local/etc/php/conf.d/docker-ci-php.ini
</code></pre></div></div>

<h2 id="500-에러-발생">500 에러 발생</h2>
<p>mysql - mysqli 
mysql과 php의 버전 문제 실섭에 맞춰 mysql 설치를 추가
mysql이 설치되어 있지 않아서 500에러를 노출</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>RUN apt-get update &amp;&amp; apt-get install -y git-core cron \
  libjpeg-dev libmcrypt-dev libpng-dev libpq-dev \
  &amp;&amp; rm -rf /var/lib/apt/lists/* \
  &amp;&amp; docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr \
  &amp;&amp; docker-php-ext-install gd mcrypt mysqli mysql opcache pdo pdo_mysql zip
</code></pre></div></div>

<center><img src="https://trello-attachments.s3.amazonaws.com/5db8f4b864493b4c6f0c56bd/5de0c694ea6cfb7ee7170f75/ce4584f5b40b556675d0ef7ff928255d/image.png" width="80%;" /></center>
<center><img src="https://trello-attachments.s3.amazonaws.com/5db8f4b864493b4c6f0c56bd/5de0c694ea6cfb7ee7170f75/a6e78153dcc073488f76afb3311245eb/image.png" width="80%;" /></center>

<p>Dockerfile 수정하고 반영하는 플로우</p>

<h2 id="dockerfile">Dockerfile</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># 베이스이미지
FROM php:5.6.30-apache
# git, php, mysql 등등 설치
RUN apt-get update &amp;&amp; apt-get install -y git-core cron \
  libjpeg-dev libmcrypt-dev libpng-dev libpq-dev\
  &amp;&amp; rm -rf /var/lib/apt/lists/* \
  &amp;&amp; docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr \
  &amp;&amp; docker-php-ext-install gd mcrypt mysqli mysql opcache pdo pdo_mysql zip

# Recommended opcache settings - https://secure.php.net/manual/en/opcache.installation.php
RUN { \
    echo 'opcache.memory_consumption=128'; \
    echo 'opcache.interned_strings_buffer=8'; \
    echo 'opcache.max_accelerated_files=4000'; \
    echo 'opcache.revalidate_freq=2'; \
    echo 'opcache.fast_shutdown=1'; \
    echo 'opcache.enable_cli=1'; \
  } &gt; /usr/local/etc/php/conf.d/docker-ci-opcache.ini
# session.auto_start 설정
RUN { \
    echo 'log_errors=on'; \
    echo 'display_errors=off'; \
    echo 'upload_max_filesize=32M'; \
    echo 'post_max_size=32M'; \
    echo 'memory_limit=128M'; \
    echo 'date.timezone="UTC"'; \
    echo 'session.auto_start=1'; \
  } &gt; /usr/local/etc/php/conf.d/docker-ci-php.ini

RUN { \
    echo '&lt;FilesMatch "^\."&gt;'; \
    echo '    Order allow,deny'; \
    echo '    Deny from all'; \
    echo '&lt;/FilesMatch&gt;'; \
    echo '&lt;DirectoryMatch "^\.|\/\."&gt;'; \
    echo '    Order allow,deny'; \
    echo '    Deny from all'; \
    echo '&lt;/DirectoryMatch&gt;'; \
  } &gt; /etc/apache2/conf-available/docker-ci-php.conf


RUN a2enconf docker-ci-php

RUN a2enmod rewrite
# apache virtual host 설정파일 복사
COPY ./000-default.conf /etc/apache2/sites-available/000-default.conf

COPY docker-entrypoint /usr/local/bin/

ENTRYPOINT ["docker-entrypoint"]
CMD ["apache2-foreground"]
</code></pre></div></div>

<h2 id="실행">실행</h2>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker-compose up
</code></pre></div></div>

<p>https://hub.docker.com/r/aspendigital/codeigniter 소스 포크하여 사용하였습니다.</p>

<p>https://hub.docker.com/repository/docker/hojindev/codeigniter_hmvc</p>

:ET